{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-cfeaca37da0a61b3.js","js/map.js","js/location.js","node_modules/@parcel/runtime-js/lib/runtime-9b9ad1ffbf3b4e42.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","js/api.js","js/constants.js","js/resultCard.js","js/inputSearch.js","app.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"8UvsI\\\":\\\"index.818f3f23.js\\\",\\\"9iqgM\\\":\\\"icon-location.c6b5a81e.svg\\\"}\"));","const mapElement = L.map(\"map\", { zoomControl: false });\nlet markerLayer = null;\n\nfunction updateMarker(latitude, longitude) {\n    const customeIcon = L.icon({\n        iconUrl: require(\"../images/icon-location.svg\"),\n    });\n\n    if (markerLayer) {\n        markerLayer.remove();\n    }\n    markerLayer = L.marker([latitude, longitude], { icon: customeIcon });\n    markerLayer.addTo(mapElement);\n}\n\nexport function initMap(latitude, longitude) {\n    mapElement.setView([latitude, longitude], 18);\n    mapElement.scrollWheelZoom.disable();\n\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        attribution:\n            '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(mapElement);\n    updateMarker(latitude, longitude);\n}\n\nexport async function updateMap(latitude, longitude) {\n    await mapElement.setView([latitude, longitude], 18);\n    updateMarker(latitude, longitude);\n}","import { initMap } from \"./map\";\n\nexport function getUserPosition() {\n    if (navigator.geolocation) {\n        return navigator.geolocation.getCurrentPosition(handleUserPosition, displayError);\n    } else {\n        alert(\"Sorry - your browser doesn't support geolocation!\");\n    }\n}\n\nfunction handleUserPosition(position) {\n    const { latitude, longitude } = position.coords;\n    initMap(latitude, longitude);\n}\n\nfunction displayError(error) {\n    switch (error.code) {\n        case error.PERMISSION_DENIED:\n            alert(\"Permission was denied\");\n            break;\n        case error.POSITION_UNAVAILABLE:\n            alert(\"Location data not available\");\n            break;\n        case error.TIMEOUT:\n            alert(\"Location request timeout\");\n            break;\n        case error.UNKNOWN_ERROR:\n            alert(\"An unspecified error occurred\");\n            break;\n        default:\n            alert(\"An error occurred, please refresh the page\");\n            break;\n    }\n}","module.exports = require('./helpers/bundle-url').getBundleURL('8UvsI') + require('./helpers/bundle-manifest').resolve(\"9iqgM\");","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","const API_KEY = \"at_HZ3wjdvqNqcraMoKIVxuLuf6uFzfN\";\n\nexport async function getIPData(inputParam, inputValue) {\n    const response = await fetch(\n        `https://geo.ipify.org/api/v2/country,city?apiKey=${API_KEY}&${inputParam}=${inputValue}`\n    );\n    const ipData = await response.json();\n    return ipData;\n}\n\nexport async function getInitialIP() {\n    const response = await fetch(\n        \"https://api.ipify.org?format=json\"\n    );\n    const currentIPData = await response.json();\n    return currentIPData;\n}","export const IP_ADDRESS_PARAM = \"ipAddress\";\nexport const DOMAIN_PARAM = \"domain\";","const ipAddressOutput = document.querySelector(\"#ip-address\");\nconst locationOutput = document.querySelector(\"#location\");\nconst timezoneOutput = document.querySelector(\"#timezone\");\nconst ispOutput = document.querySelector(\"#isp\");\n\nexport function updateResultCard({ ip, city, country, postalCode, timezone, isp }) {\n    ipAddressOutput.textContent = !ip ? \"-\" : `${ip}`;\n    locationOutput.textContent = `${city}, ${country} ${postalCode}`;\n    timezoneOutput.textContent = !timezone ? \"-\" : `UTC ${timezone}`;\n    ispOutput.textContent = !isp ? \"-\" : `${isp}`;\n}","import { IP_ADDRESS_PARAM, DOMAIN_PARAM } from \"./constants\";\nimport { getIPData } from \"./api\";\nimport { updateMap } from \"./map\";\nimport { updateResultCard } from \"./resultCard\";\n\nexport function initInputSearch() {\n    const searchButton = document.querySelector(\".search-button\");\n    searchButton.addEventListener(\"click\", handleInputValue);\n}\n\nasync function handleInputValue(e) {\n    const regexIPAddress = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    const regexDomain = /[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9](?:\\.[a-zA-Z]{2,})+/;\n    const searchInput = document.querySelector(\".search-input\");\n    const inputValue = searchInput.value;\n    let inputParam = null;\n\n    if (regexIPAddress.test(inputValue)) {\n        inputParam = IP_ADDRESS_PARAM;\n    }\n    else if (regexDomain.test(inputValue)) {\n        inputParam = DOMAIN_PARAM;\n    } else {\n        alert(\n            `The search input you just entered (${inputValue}) is not valid.\n      The format expected for an IP address is four decimal numbers separated by periods, from 0.0.0.0 to 255.255.255.255\n      The format expected for a domain is for example www.domain.com`\n        );\n    }\n\n    const response = await getIPData(inputParam, inputValue);\n\n    updateResultCard({\n      ip: response.ip, \n      city: response.location.city, \n      country: response.location.country, \n      postalCode: response.location.postalCode, \n      timezone: response.location.timezone, \n      isp: response.isp \n    });\n\n    const longitude = response.location.lng;\n    const latitude = response.location.lat;\n\n    updateMap(latitude, longitude);\n}\n","import { getUserPosition } from \"./js/location\";\nimport { getInitialIP, getIPData } from \"./js/api\";\nimport { IP_ADDRESS_PARAM } from \"./js/constants\";\nimport { initInputSearch } from \"./js/inputSearch\";\nimport { updateResultCard } from \"./js/resultCard\";\n\nasync function init() {\n    getUserPosition();\n    const { ip } = await getInitialIP();\n    const ipData = await getIPData(IP_ADDRESS_PARAM, ip);\n    initInputSearch();\n    updateResultCard({\n      ip: ipData.ip, \n      city: ipData.location.city, \n      country: ipData.location.country, \n      postalCode: ipData.location.postalCode, \n      timezone: ipData.location.timezone, \n      isp: ipData.isp \n    });\n}\n\ninit();"],"names":["$8b4d1930797b255e$export$6503ec6e8aabbaf","$8b4d1930797b255e$export$f7ad0328861e2f03","$8b4d1930797b255e$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$11e61c6cd2893289$var$mapElement","L","map","zoomControl","$11e61c6cd2893289$var$markerLayer","$11e61c6cd2893289$var$updateMarker","latitude","longitude","customeIcon","icon","iconUrl","remove","marker","addTo","$10d2328590831f92$var$handleUserPosition","position","coords","setView","scrollWheelZoom","disable","tileLayer","attribution","$11e61c6cd2893289$export$b08464e47b7a3a8","$10d2328590831f92$var$displayError","error","code","PERMISSION_DENIED","alert","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","module","exports","getBundleURL","resolve","$f29cd6c67ea13581$export$bdfd709ae4826697","$f29cd6c67ea13581$var$bundleURL","$f29cd6c67ea13581$var$getBaseURL","url","replace","value","err","matches","stack","match","$f29cd6c67ea13581$var$getBundleURL","$b72479e59d6865bf$export$b785810671e54ab","inputParam","inputValue","response","fetch","json","$8781f560bad75bf4$var$ipAddressOutput","document","querySelector","$8781f560bad75bf4$var$locationOutput","$8781f560bad75bf4$var$timezoneOutput","$8781f560bad75bf4$var$ispOutput","$8781f560bad75bf4$export$dbd27268c41e7b51","ip","city","country","postalCode","timezone","isp","textContent","$52ac8367d05dabef$var$handleInputValue","e","test","location","lng","lat","navigator","geolocation","getCurrentPosition","$10d2328590831f92$export$faf5b2e50c7374c0","$b72479e59d6865bf$export$1b31299687378482","ipData","addEventListener","$30b58c776b9bc837$var$init"],"version":3,"file":"index.818f3f23.js.map"}